//Given a linked list, remove the n-th node from the end of list and return its head.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode curr = head; 
        int count = 0; 
        ListNode size = head; 
        int length = 1; 
        int siz = 0; 
        if(head.next==null){
            head=null; 
        }
        while(size.next!=null){
            length++;
            size = size.next; 
        }
        System.out.print(length);
        count = length - n; 
        System.out.print(count);
        while(curr.next!=null){
            if(count-1<0){
                curr= curr.next; 
                return curr; 
            }
            if(siz==count-1){
                curr.next=curr.next.next;
                System.out.print(siz);
                return head; 
            }
            siz++; 
            curr=curr.next; 
                     
            }
        System.out.print(siz);
        return head; 
    }
}

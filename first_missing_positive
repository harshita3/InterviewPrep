class Solution {
    public int firstMissingPositive(int[] nums) {
        Arrays.sort(nums);
        int count = 0; 
        if(nums.length==0){
            return 1; 
        }
        if(nums.length==1){
            if(nums[0]==1){
                return 2; 
            }
            if(nums[0]>1){
                return 1; 
            }
            if(nums[0]==0){
                return 1; 
            }
            if(nums[0]<0){
                return 1; 
            }
        }
        for(int b = 0; b<nums.length; b++){
            System.out.println(nums[b]);
        }
        
        for(int q = 1; q<nums.length-1; q++){
            if(nums[q]==nums[q+1] && nums[q]==nums[q-1]){
                nums[q-1]=0; 
                nums[q]=0; 
                continue; 
            }
            if(nums[q]==nums[q-1]){
                nums[q]=0;
                continue; 
            }
            if(nums[q]==nums[q+1]){
                nums[q]=0; 
                continue; 
            }
            
        }
        for(int b = 0; b<nums.length; b++){
            System.out.print(nums[b]);
        }
        Arrays.sort(nums); 
        if(nums[0]<=0){
            int k = 0; 
            while(nums[k]<=0 && k<nums.length-1){
                count++; 
                k++; 
            }
            int j = 1; 
            for(int i = count; i<nums.length; i++){
                if(nums[i]!=j){
                    return j; 
                }
                j++; 
            }
        }
        if(nums[0]>0){
            int a = 1; 
            for(int i = 0; i<nums.length; i++){
                if(nums[i]!=a){
                    return a; 
                }
                a++; 
            }
        }
       int min_at_end = nums[nums.length-1]+1;  
       return min_at_end; 
    
  
        
        
        
        
        
        
        
        
    }
}
